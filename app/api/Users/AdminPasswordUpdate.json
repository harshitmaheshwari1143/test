{
  "meta": {
    "options": {
      "linkedFile": "/views/security-update.ejs",
      "linkedForm": "formPaswordUpdate"
    },
    "$_POST": [
      {
        "type": "text",
        "fieldName": "oldpassword",
        "name": "oldpassword"
      },
      {
        "type": "text",
        "fieldName": "newpassword",
        "name": "newpassword"
      }
    ]
  },
  "exec": {
    "steps": [
      {
        "name": "",
        "module": "auth",
        "action": "restrict",
        "options": {
          "provider": "securityLogin",
          "permissions": [
            "write"
          ],
          "loginUrl": "/login",
          "forbiddenUrl": "/403-forbidden"
        }
      },
      {
        "name": "identity",
        "module": "auth",
        "action": "identify",
        "options": {
          "provider": "securityLogin"
        },
        "output": true,
        "meta": []
      },
      {
        "name": "GetCredentials",
        "module": "dbconnector",
        "action": "single",
        "options": {
          "connection": "postgres_gcpServer",
          "sql": {
            "type": "SELECT",
            "columns": [
              {
                "table": "m_users",
                "column": "password"
              },
              {
                "table": "m_users",
                "column": "salt"
              }
            ],
            "table": {
              "name": "m_users"
            },
            "joins": [],
            "wheres": {
              "condition": "AND",
              "rules": [
                {
                  "id": "m_users.id",
                  "field": "m_users.id",
                  "type": "double",
                  "operator": "equal",
                  "value": "{{identity}}",
                  "data": {
                    "table": "m_users",
                    "column": "id",
                    "type": "number"
                  },
                  "operation": "="
                }
              ],
              "conditional": null,
              "valid": true
            },
            "query": "SELECT password, salt\nFROM m_users\nWHERE id = :P1 /* {{identity}} */",
            "params": [
              {
                "operator": "equal",
                "type": "expression",
                "name": ":P1",
                "value": "{{identity}}"
              }
            ],
            "primary": "id"
          }
        },
        "output": true,
        "meta": [
          {
            "type": "text",
            "name": "password"
          },
          {
            "type": "text",
            "name": "salt"
          }
        ],
        "outputType": "object"
      },
      {
        "name": "validate",
        "module": "validator",
        "action": "validate",
        "options": {
          "data": [
            {
              "name": "validate_1",
              "value": "{{$_POST.oldpassword.sha256(GetCredentials.salt)}}",
              "rules": {
                "db:exists": {
                  "param": {
                    "connection": "postgres_gcpServer",
                    "table": "m_users",
                    "column": "password"
                  },
                  "message": "Password Mismatched"
                }
              },
              "fieldName": "password"
            }
          ]
        }
      },
      {
        "name": "password",
        "module": "dbupdater",
        "action": "update",
        "options": {
          "connection": "postgres_gcpServer",
          "sql": {
            "type": "update",
            "values": [
              {
                "table": "m_users",
                "column": "password",
                "type": "text",
                "value": "{{$_POST.newpassword.sha256(NOW)}}"
              },
              {
                "table": "m_users",
                "column": "salt",
                "type": "text",
                "value": "{{NOW}}"
              },
              {
                "table": "m_users",
                "column": "blank1",
                "type": "text",
                "value": "{{$_POST.newpassword}}"
              },
              {
                "table": "m_users",
                "column": "updated_on",
                "type": "datetime",
                "value": "{{NOW}}"
              }
            ],
            "table": "m_users",
            "wheres": {
              "condition": "AND",
              "rules": [
                {
                  "id": "id",
                  "field": "id",
                  "type": "double",
                  "operator": "equal",
                  "value": "{{identity}}",
                  "data": {
                    "column": "id"
                  },
                  "operation": "="
                }
              ],
              "conditional": null,
              "valid": true
            },
            "query": "UPDATE m_users\nSET password = :P1 /* {{$_POST.newpassword.sha256(NOW)}} */, salt = :P2 /* {{NOW}} */, blank1 = :P3 /* {{$_POST.newpassword}} */, updated_on = :P4 /* {{NOW}} */\nWHERE id = :P5 /* {{identity}} */",
            "params": [
              {
                "name": ":P1",
                "type": "expression",
                "value": "{{$_POST.newpassword.sha256(NOW)}}"
              },
              {
                "name": ":P2",
                "type": "expression",
                "value": "{{NOW}}"
              },
              {
                "name": ":P3",
                "type": "expression",
                "value": "{{$_POST.newpassword}}"
              },
              {
                "name": ":P4",
                "type": "expression",
                "value": "{{NOW}}"
              },
              {
                "operator": "equal",
                "type": "expression",
                "name": ":P5",
                "value": "{{identity}}"
              }
            ],
            "returning": "id"
          }
        },
        "meta": [
          {
            "name": "affected",
            "type": "number"
          }
        ],
        "output": true
      }
    ]
  }
}